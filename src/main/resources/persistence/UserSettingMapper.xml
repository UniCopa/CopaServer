<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2013 UniCoPA This program is free software: you can redistribute 
	it and/or modify it under the terms of the GNU General Public License as 
	published by the Free Software Foundation, either version 3 of the License, 
	or (at your option) any later version. This program is distributed in the 
	hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
	warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU General Public License for more details. You should have received a copy 
	of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. -->
 <!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace='unicopa.copa.server.database.data.persistence.UserSettingMapper'>

	<delete id="deleteAllGCMKeys" parameterType='int'>
		delete from gCMKeys
		Where personID=#{userID}
	</delete>

	<delete id="deleteAllSubscriptions" parameterType='int'>
		delete from subscriptionLists
		Where personID=#{userID}
	</delete>

	<insert id="insertGCMKeys" parameterType='map'>
		insert into gCMKeys values
		<foreach item="item" index="index" collection="gCMKeys" open=""
			separator="," close="">
			(#{item},#{userID})
		</foreach>
	</insert>

	<insert id="insertSubscription" parameterType='map'>
		insert into subscriptionLists values
		(#{userID},#{eventID},#{color})
	</insert>

	<update id="updatePerson" parameterType='map'>
		update persons
		set language = #{language},
		eMailNotification = #{eMailNotification}
		where personID = #{userID}
	</update>

	<select id='getUserGCMKey' parameterType='int' resultType='String'>
		Select distinct g.gCMKey
		From gCMKeys g
		Where g.personID=#{userID}
	</select>

	<select id='getEventColors' parameterType='int' resultType='hashMap'>
		Select distinct l.eventID, l.color
		From subscriptionLists l
		Where l.personID=#{userID}
	</select>

	<select id='getSubscriptions' parameterType='int' resultType='int'>
		Select distinct l.eventID
		From subscriptionLists l
		Where l.personID=#{userID}
	</select>

	<select id='getEmailNotification' parameterType='int'
		resultType='boolean'>
		Select distinct p.eMailNotification
		From persons p
		Where p.personID=#{userID}
	</select>

	<select id='getLanguage' parameterType='int' resultType='String'>
		Select distinct p.language
		From persons p
		Where p.personID=#{userID}
	</select>
</mapper>